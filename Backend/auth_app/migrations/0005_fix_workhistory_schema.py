# Generated by Django 4.2.23 on 2025-08-26 05:15

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('auth_app', '0004_add_missing_parent_fields'),
    ]

    operations = [
        migrations.RunSQL(
            """
            -- First backup any existing data
            CREATE TEMP TABLE workhistory_backup AS 
            SELECT * FROM auth_app_workhistory;
            
            -- Drop the old table
            DROP TABLE IF EXISTS auth_app_workhistory CASCADE;
            
            -- Recreate the table with correct schema
            CREATE TABLE auth_app_workhistory (
                id SERIAL PRIMARY KEY,
                user_id BIGINT NOT NULL REFERENCES auth_app_customuser(id) ON DELETE CASCADE,
                job_type VARCHAR(20) NOT NULL,
                employment_status VARCHAR(50) NOT NULL,
                classification VARCHAR(50) NOT NULL,
                occupation VARCHAR(255) NOT NULL,
                employing_agency VARCHAR(255) NOT NULL,
                how_got_job VARCHAR(100) NOT NULL,
                monthly_income VARCHAR(50) NOT NULL,
                is_breadwinner BOOLEAN NOT NULL DEFAULT FALSE,
                length_of_service VARCHAR(50) NOT NULL,
                college_education_relevant VARCHAR(10) NOT NULL,
                start_date DATE,
                end_date DATE
            );
            
            -- Add constraints for choices
            ALTER TABLE auth_app_workhistory ADD CONSTRAINT auth_app_workhistory_job_type_check 
            CHECK (job_type IN ('first_job', 'current_job'));
            
            ALTER TABLE auth_app_workhistory ADD CONSTRAINT auth_app_workhistory_employment_status_check 
            CHECK (employment_status IN ('employed_locally', 'employed_internationally', 'self_employed', 'unemployed', 'retired'));
            
            ALTER TABLE auth_app_workhistory ADD CONSTRAINT auth_app_workhistory_classification_check 
            CHECK (classification IN ('government', 'private', 'ngo', 'freelance', 'business_owner'));
            
            ALTER TABLE auth_app_workhistory ADD CONSTRAINT auth_app_workhistory_monthly_income_check 
            CHECK (monthly_income IN ('less_than_15000', '15000_to_29999', '30000_to_49999', '50000_and_above', 'prefer_not_to_say'));
            
            ALTER TABLE auth_app_workhistory ADD CONSTRAINT auth_app_workhistory_college_education_relevant_check 
            CHECK (college_education_relevant IN ('yes', 'no', 'somewhat'));
            
            -- Create the many-to-many table for skills
            CREATE TABLE IF NOT EXISTS auth_app_workhistory_skills (
                id SERIAL PRIMARY KEY,
                workhistory_id BIGINT NOT NULL REFERENCES auth_app_workhistory(id) ON DELETE CASCADE,
                skill_id BIGINT NOT NULL REFERENCES auth_app_skill(id) ON DELETE CASCADE,
                UNIQUE(workhistory_id, skill_id)
            );
            
            -- Try to migrate old data if it exists (optional)
            -- This is commented out because the old structure is incompatible
            -- INSERT INTO auth_app_workhistory (user_id, job_type, employment_status, classification, occupation, employing_agency, how_got_job, monthly_income, is_breadwinner, length_of_service, college_education_relevant, start_date, end_date)
            -- SELECT user_id, 'current_job', 'employed_locally', 'private', position, company_name, 'online_application', 'prefer_not_to_say', FALSE, 'less_than_1_year', 'somewhat', start_date, end_date
            -- FROM workhistory_backup;
            """,
            reverse_sql="DROP TABLE IF EXISTS auth_app_workhistory CASCADE;"
        ),
    ]
